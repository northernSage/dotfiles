# bash configuration for macOS environment

# Source global definitions
if [ -f /etc/bashrc ]; then . /etc/bashrc
fi

# pyenv terminal integration requirement
if command -v pyenv &>/dev/null ; then
  eval "$(pyenv init -)"
fi

# check the window size after each command and
# update the values of LINES and COLUMNS shopt -s checkwinsize
# enable vim mode
set -o vi
# noclobber
set -o noclobber

# reset aliases
unalias -a

# *************
# * DIRCOLORS *
# *************

if command -v dircolors &>/dev/null; then
  if test -r ~/.dircolors; then
    eval "$(dircolors -b ~/.dircolors)"
  else
    eval "$(dircolors -b)"
  fi
fi

# ***********
# * ALIASES *
# ***********

# typing clear every time got old...
alias c=clear

if [[ "$OSTYPE" == "darwin"* ]]; then
  # Make all GNU flavor commands available, may override same-name BSD flavor commands for x86 Mac
  export PATH="/usr/local/opt/coreutils/libexec/gnubin:${PATH}"
  export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:${MANPATH}"
fi

# enable colors for freebs ls and gnu ls
alias ls="ls --color=always"

# Common variations of 'ls' command
alias ll="ls -l"
alias lh="ls -lh"
alias la="ls -la"

# for git commands
alias gl='git log'
alias gp='git push'
alias ga='git add'
alias gd='git diff'
alias gb='git branch'
alias gs='git status'
alias gc='git commit'
alias gco='git checkout'
alias gsb='git show-branch'

# prevent accidents (but makes scripting harder)
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -n'
alias mkdir='mkdir -p'

# these make it easier to get around
alias une='cd ~/unesp'
alias cbb='cd ~/Github/cbb'
alias dow='cd ~/downloads'
alias des='cd ~/desktop'
alias pic='cd ~/pictures'
alias hub='cd ~/Github/'
alias dot='cd ~/Github/devenv/dotfiles'

# **********
# * PROMPT *
# ***********

# Prompt
export PS1="\h \[\e[1;34m\]\w\[\e[m\] \\$ "

# *************
# * FUNCTIONS *
# *************

# that makes extracting archives a lot faster
extract () {
   if [ -f "$1" ] ; then
       case "$1" in
           *.tar.gz)    tar xvzf "$1";;
           *.tar.xz)    tar xvf "$1";;
           *.tar.bz2)   tar xvjf "$1";;
           *.gz)        gunzip "$1"  ;;
           *.bz2)       bunzip2 "$1" ;;
           *.rar)       unrar x "$1" ;;
           *.tgz)       tar xvzf "$1";;
           *.tar)       tar xvf "$1" ;;
           *.zip)       unzip "$1"   ;;
           *.tbz2)      tar xvjf "$1";;
           *.Z)         uncompress "$1"  ;;
           *.7z)        7z x $1;;
           *) echo "could not extract such file format '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
}

# Creates an archive (*.tar.gz) from given directory.
function maketar() {
    tar cvzf "${1%%/}.tar.gz"  "${1%%/}/";
}

# Create a ZIP archive of a file or folder.
function makezip() {
    zip -r "${1%%/}.zip" "$1" ;
}

# very convenient alternative to cd ../../..(...)
up() {
    cd $(eval printf '../'%.0s "{1..$1}") && pwd;
}

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# add scripts directory to path
DOTFILES=$HOME/Github/devenv/dotfiles
export PATH=$DOTFILES/macos/scripts:$PATH

# for the lasta time, I do not want to use zash.
export BASH_SILENCE_DEPRECATION_WARNING=1
